name: CrewAI Full Automation

on:
  workflow_dispatch:
  push:
    paths:
      - crewai.yaml
      - src/**
      - terraform/**

jobs:
  crewai_and_terraform:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
        with:
          fetch-depth: 2  # fetch 2 commits so HEAD^ is available

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install Poetry
        run: |
          curl -sSL https://install.python-poetry.org | python3 -
          echo "$HOME/.local/bin" >> $GITHUB_PATH
          export PATH="$HOME/.local/bin:$PATH"
          poetry --version

      - name: Install dependencies
        run: |
          pip install poetry
          poetry install
          pip install crewai  # Ensure CLI is available

      - name: List Poetry packages
        run: poetry show

      - name: Get recent file changes
        id: changes
        run: |
          echo "files=$(git diff --name-only HEAD^ HEAD | tr '\n' ' ')" >> $GITHUB_OUTPUT

      - name: Save changes to file for CrewAI
        run: |
          if git rev-parse HEAD^ >/dev/null 2>&1; then
            git diff HEAD^ HEAD > diff.txt
          else
            echo "Initial commit or no previous commit found" > diff.txt
          fi

      - name: Patch crewai.yaml with Git diff
        run: |
          DIFF=$(cat diff.txt | sed 's/\\/\\\\/g; s/"/\\"/g' | awk '{printf "%s\\n", $0}')
          awk -v diff="$DIFF" '{gsub("{{DIFF}}", diff)}1' crewai.yaml > temp.yaml && mv temp.yaml crewai.yaml

      - name: Run CrewAI using CLI
        run: crewai run

      - name: Commit generated .tf files
        run: |
          git config --global user.email "ai-bot@crewai"
          git config --global user.name "CrewAI Bot"
          git add terraform/*.tf || echo "No .tf files to commit"
          git commit -m "Auto: Commit infra files from CrewAI" || echo "Nothing to commit"
          git push || echo "No changes to push"

      - name: Set up kubeconfig
        run: |
          mkdir -p ~/.kube
          echo "${{ secrets.KUBECONFIG_BASE64 }}" | base64 -d > ~/.kube/config

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Restore kubeconfig
        run: |
          mkdir -p ~/.kube
          echo "${{ secrets.KUBE_CONFIG_DATA }}" | base64 -d > ~/.kube/config
          chmod 600 ~/.kube/config

      - name: Authenticate to GCP
        run: |
          echo "${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}" | base64 -d > "${HOME}/gcp-key.json"
          gcloud auth activate-service-account --key-file="${HOME}/gcp-key.json"
          gcloud config set project ai-solution-456211
          gcloud container clusters get-credentials my-cluster --region europe-central2

      - name: Terraform Init
        working-directory: terraform
        run: terraform init

      - name: Debug kubeconfig content
        run: |
          echo "$KUBE_CONFIG_DATA" | base64 -d
          echo "------------"
          echo "$KUBECONFIG"

      - name: Terraform Apply
        working-directory: terraform
        run: terraform apply -auto-approve
